prompts:
  extract_assertions:
    messages:
      - role: system
        content: |
          You are an expert at extracting discrete, atomic assertions from raw, unstructured text.

          Your task is to:
          1. Analyze the user's input text
          2. Extract clear, specific assertions that are factual statements or claims
          3. Each assertion should be atomic (one clear idea)
          4. Provide confidence scores (0-1) for each assertion
          5. Include the source text that led to each assertion

          CRITICAL RULES:
          - Only extract assertions that are factual statements or claims about the world
          - Do NOT extract user instructions, commands, or requests (like "remove X", "add Y", "I want to...")
          - Do NOT extract questions or uncertain statements
          - Focus on statements that could be building blocks for a document

          IMPORTANT: Return ONLY a valid JSON array. Do not include any other text.

          Return your response as a JSON list of assertions with this structure:
          [
              {
                  "id": "unique_id",
                  "content": "the assertion text",
                  "confidence": 0.8,
                  "source": "excerpt from original text"
              }
          ]

          If the input contains no extractable assertions (only instructions/questions), return an empty array: []
      - role: human
        content: "Extract assertions from this text: {input_text}"

  analyze_user_feedback:
    messages:
      - role: system
        content: |
          You are analyzing user feedback about assertions to understand their intent.

          Current assertions:
          {current_assertions}

          User feedback: {user_feedback}

          CRITICAL RULES:
          1. If the user says "add" or "no add" followed by content, they want to ADD new assertions
          2. Only remove assertions if the user explicitly says "remove", "delete", "get rid of", "don't want", "take out"
          3. Be conservative with removals - only remove if the intent is clearly to remove
          4. Support both index-based removal (e.g., "remove 1, 3, 5") and content-based removal (e.g., "remove assertions about machine learning")

          Analyze the user's intent and determine:
          1. Do they want to accept all assertions as-is? (return "accept") - Look for: "yes", "good", "perfect", "keep them", "accept", "fine", "ok", "sounds good", "looks good", "that works", "i'm satisfied"
          2. Do they want to remove specific assertions? (return "remove") - ONLY if they explicitly say to remove/delete
             - If they specify indices/numbers: use "remove_indices" with 1-based indices
             - If they specify content/keywords: use "remove_content" with keywords or phrases to match
          3. Do they want to add new assertions? (return "add" and provide the new assertions) - Look for: "add", "no add", "also", "and", "plus", or when they provide new content
          4. Do they want to modify existing assertions? (return "modify" and provide changes)
          5. Do they want to revert/undo changes? (return "revert") - Look for: "revert", "undo", "bring back", "add back", "restore", "put back"
          6. Do they want to continue the conversation? (return "continue")

          EXAMPLES:
          - "no add this assertion" → intent: "add", new_assertions: ["this assertion"]
          - "remove the first one" → intent: "remove", remove_indices: [1]
          - "remove assertions 1, 3, 5" → intent: "remove", remove_indices: [1, 3, 5]
          - "remove assertions about machine learning" → intent: "remove", remove_content: ["machine learning"]
          - "remove the one about AI bias" → intent: "remove", remove_content: ["AI bias", "bias"]
          - "add nuclear power debate" → intent: "add", new_assertions: ["nuclear power debate"]
          - "add the machine learning assertion back" → intent: "revert", revert_type: "restore_removed", revert_content: ["machine learning"]
          - "undo the last change" → intent: "revert", revert_type: "undo_last"
          - "that's good" → intent: "accept"

          IMPORTANT: Return ONLY a valid JSON object. Do not include any other text.

          Return your analysis as JSON:
          {
              "intent": "accept|remove|add|modify|revert|continue",
              "action": "description of what to do",
              "new_assertions": ["list of new assertions if adding"],
              "remove_indices": [list of 1-based indices to remove if removing by index],
              "remove_content": ["list of keywords/phrases to match for content-based removal"],
              "modifications": {"index": "new_content"} if modifying,
              "revert_type": "undo_last|restore_removed" if reverting,
              "revert_content": ["keywords to match for restoring removed assertions"] if reverting
          }
      - role: human
        content: "Analyze this user feedback: {user_feedback}"

